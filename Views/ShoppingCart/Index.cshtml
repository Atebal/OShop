@model OShop.ViewModels.ShoppingCartIndexViewModel
@using Orchard.ContentManagement
@using Orchard.ContentManagement.Aspects
@using OShop.Helpers

@{
    Layout.Title = T("My shopping cart");

    Script.Require("OShop");


    // Init View model
    Model.CountryId = Model.Cart.ShippingAddress != null ? Model.Cart.ShippingAddress.CountryId : 0;
    Model.StateId = Model.Cart.ShippingAddress != null ? Model.Cart.ShippingAddress.StateId : 0;
    Model.ShippingProviderId = Model.Cart.ShippingOption != null ? Model.Cart.ShippingOption.Provider.Id : 0;
}

<div class="shopping-cart-container">
    @if (Model.Cart.Items.Any()) {
        using (Html.BeginFormAntiForgeryPost(Url.Action("Update", "ShoppingCart", new { area = "OShop" }), FormMethod.Post, new { id = "shoppingcartform" })) {
            <div class="cart-actions-head">
                @Html.ActionLink(T("Empty cart").Text, "Empty", "ShoppingCart", new { Area = "OShop" }, new { })
            </div>
            <table class="cart-items">
                <thead>
                    <tr>
                        <th>@T("SKU")</th>
                        <th>@T("Product")</th>
                        <th>@T("Unit Price")</th>
                        <th>@T("Qty.")</th>
                        <th>@T("Total")</th>
                        <th></th>
                    </tr>
                </thead>
                @{
            int i = 0;
                }
                @foreach (var entry in Model.Cart.Items) {
                    <tr>
                        <td>@entry.Item.SKU</td>
                        <td>
                            <div class="designation">
                                @if (entry.Item.Content != null) {
                                    @Html.ItemDisplayLink(entry.Item.Designation, entry.Item.Content)
                                }
                                else {
                                    @entry.Item.Designation
                                }
                            </div>
                            @if (!String.IsNullOrWhiteSpace(entry.Item.Description)) {
                                <div class="description">@entry.Item.Description</div>
                            }
                        </td>



                        <td>
                            @if (Model.VatEnabled) {
                                @String.Format(Model.NumberFormat, "{0:C}", entry.VatIncludedUnitPrice())
                            }
                            else {
                                @String.Format(Model.NumberFormat, "{0:C}", entry.UnitPrice)
                            }
                        </td>
                        <td>
                            <input type="hidden" name="@String.Format("CartItems[{0}].Id", i)" value="@entry.Id" />
                            <input type="number" name="@String.Format("CartItems[{0}].Quantity", i)" value="@entry.Quantity" class="quantity oshop-autoupdate" />
                        </td>
                        <td>
                            @if (Model.VatEnabled && entry.Item.VAT != null) {
                                @String.Format(Model.NumberFormat, "{0:C}", entry.VatIncludedSubTotal())
                            }
                            else {
                                @String.Format(Model.NumberFormat, "{0:C}", entry.SubTotal())
                            }
                        </td>
                        <td>
                            <button type="submit" name="@String.Format("CartItems[{0}].IsRemoved", i)" class="oshop-confirm" data-msg="@T("Are you sure you want to remove this item from your cart ?")" value="true">@T("Remove")</button>
                        </td>
                    </tr>
                            i++;
                }
                <tfoot>
                    @if (Model.Cart.ShippingOption != null) {
                        <tr class="total">
                            <td colspan="4">
                                @T("Items total")
                            </td>
                            <td>
                                @if (Model.VatEnabled) {
                                    @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.VatIncludedItemsTotal())
                                }
                                else {
                                    @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.ItemsTotal())
                                }
                            </td>
                        </tr>
                        <tr class="total">
                            <td colspan="4">
                                @T("Shipping")
                            </td>
                            <td>
                                @if (Model.VatEnabled) {
                                    @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.ShippingOption.Provider.VAT.GetVatIncludedPrice(Model.Cart.ShippingOption.Option.Price))
                                }
                                else {
                                    @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.ShippingOption.Option.Price)
                                }
                            </td>
                        </tr>
                    }
                    <tr class="total">
                        <td colspan="4">
                            @T("Total")
                        </td>
                        <td>
                            @if (Model.VatEnabled) {
                                @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.VatIncludedCartTotal())
                            }
                            else {
                                @String.Format(Model.NumberFormat, "{0:C}", Model.Cart.CartTotal())
                            }
                        </td>
                    </tr>
                </tfoot>
            </table>

                if (Model.Countries.Any()) {
                <fieldset>
                    <legend>@T("Location")</legend>
                    <div>
                        @Html.LabelFor(m => m.CountryId, T("Country"))
                        @Html.DropDownListFor(m => m.CountryId, Model.Countries.BuildCountrySelectList(), new { @class = "oshop-autoupdate" })
                        @Html.ValidationMessageFor(m => m.CountryId)
                    </div>
                    @if (Model.States.Any()) {
                        <div>
                            @Html.LabelFor(m => m.StateId, T("State"))
                            @Html.DropDownListFor(m => m.StateId, Model.States.BuildStateSelectList(), new { @class = "oshop-autoupdate" })
                            @Html.ValidationMessageFor(m => m.StateId)
                        </div>
                    }
                </fieldset>
                            }

                if (Model.Cart.IsShippingRequired()) {
                    if (Model.ShippingProviders.Any()) {
                    <ul>
                        @foreach (var provider in Model.ShippingProviders) {
                            <li>
                                @Html.RadioButtonFor(m => m.ShippingProviderId, provider.Provider.Id, new { id = "ShippingOption" + provider.Provider.Id, @class = "oshop-autoupdate" })
                                @Html.LabelFor(m => m.ShippingProviderId, provider.Provider.As<ITitleAspect>().Title, new { @for = "ShippingOption" + provider.Provider.Id })
                                <span>
                                    @if (Model.VatEnabled) {
                                        @String.Format(Model.NumberFormat, "{0:C}", provider.Provider.VAT.GetVatIncludedPrice(provider.Option.Price))
                                    }
                                    else {
                                        @String.Format(Model.NumberFormat, "{0:C}", provider.Option.Price)
                                    }
                                </span>
                            </li>
                        }
                    </ul>
                    }
                    else {
                        <div>@T("There is no shipping option for your order / location. Please contact us.")</div>
                        }
                    }

            <div class="cart-actions-foot">
                <button type="submit" name="Action" value="Update">@T("Update")</button>
                @if (Model.Cart.IsValid) {
                    if (Model.CheckoutEnabled) {
                        <button type="submit" name="Action" value="Checkout">@T("Check out")</button>
                    }
                    if (Model.ExpressCheckoutEnabled) {
                        <button type="submit" name="Action" value="ExpressCheckout">@T("Check out")</button>
                    }
                }
            </div>
        }
    }
    else {
        <p class="cart-empty">
            @T("Your shopping cart is empty.")
        </p>
    }
</div>
